<?php

/** http://internetdevels.com/blog/module-with-field-api-drupal-7
 * Implements hook_field_info().
 */
function textf_field_info(){
    // Returning array.
    return array(
        // which is called textf.
        'textf' => array(
            // Name of our type will be 'Te(x/s)t field'.
            'label' => t('Te(x/s)t field'),
            // description of our type.
            'description' => t('sample text field'),
            // Standard widget that will be displayed at once.
            // after that we choose field type.
            'default_widget' => 'textf_widget',
            //Standard that will be displayed right after we choose field type.
            'default_formatter' => 'textf_formatter',
        ),
    );
}

/**
 * Implements hook_field_widget_info().
 */
function textf_field_widget_info(){
    // Returning massive.
    return array(
        // with textf name.
        'textf' => array(
            // our widget will be named textf label.
            'label' => t('textf label'),
            // our widget will work with a field in DB under the name textf.
            'field types' => array('textf'),
        ),
    );
}

/**
 * Implements hook_field_formatter_info().
 */
function textf_field_formatter_info(){
    // Returning array.
    return array(
        // Name of our format for code.
        'textf_formatter' => array(
            // Displayed name of format.
            'label' => t('Simple text field formatter'),
            // Field in DB with which our format will work.
            'field types' => array('textf'),
        ),
    );
}

/**
 * Implements hook_field_widget_form().
 */

function textf_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element){
    // Setting switch into parameters that will work widget types that are in module.
    switch($instance['widget']['type']){
        // if parameter case is 'textf'.
        case 'textf':
            // then we assign textf element an array.
            // With the following values.
            $element['textf'] = array(
                // Element type 'textfield'.
                '#type' => 'textfield',
                // Heading given in element settings.
                '#title' => $element['#title'],
                // Widget desription is given in element settings.
                '#description' => $element['#description'],
                // our widget will have standard value textfield.
                '#default_value' => t('textfield'),
                // If element is required it will be indicated in settings of the very element.
                '#required' => $element['#required'],
                // Element Location -
                // If it's indicated value should be used, if not, value is 0.
                '#weight' => isset($element['#weight'])? $element['#weight']:0,
                // Line that we will need for the output.
                '#delta' => $delta,
            );
            break;
    }
    return $element;
}

// And the final step: we need to show to Field API what it should do if there's no text. That's how it can be done:
/**
 * Implements hook_field_is_empty().
 */
function textf_field_is_empty($item, $field){
    // If there's nothing in $item['textf'].
    if(empty($item['textf'])){
        // Then we return 1, i.e. we say to Drupal that everything is fine).
        return TRUE;
        // And if it's empty, nothing will be displayed.
    }
}
// https://drupal.org/node/707832  field api