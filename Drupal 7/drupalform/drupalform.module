<?php

/**
 * @file
 * This is the main module file.
 */

/**
* Implements hook_permission
* 
* Defines a new permission called 'my custom permission'
*/

function drupalform_permission(){
  return array(
      'my custom permission' => array(
        'title' => t('My custom permission'),
        'description' => t('Allows users to perform a task in my module'),
      ),
  );
}

/**
* Implements hook_init()
* Runs every time a page is requested on the site.
*/
function drupalform_init(){ 
   if(current_path() == 'drupalform/form1'){
     if(user_access('my custom permission')){
        drupal_set_message(t('user has my custom permission'), 'status', FALSE);
     }else{
        drupal_set_message(t('user does not have my custom permission'), 'error', FALSE);
        drupal_access_denied();
     }
   }
}

/**
 * Implements hook_help().
 */
function drupalform_help($path, $arg){
    if($path == 'admin/help#drupalform'){
        $output = '<h3>'.t('About') .'</h3>';
        $output .= '<p>'.t('The drupalform module shows how to create forms using Drupal Form API.').'</p>';
        return $output;
    }
}

/**
 * Implementation of hook_menu().
 */
function drupalform_menu(){
    $items['drupalform/form1'] = array(
        'title' => 'Test Form',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('drupalform_form1')
    );
    
    
  $items['example/drupalform-autocomplete'] = array(
    'page callback' => 'drupalform_autocomplete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  
  return $items;


    
    return $items;
}

function drupalform_form1($form, $form_state){
    $form = array();
    
    $form['overview'] = array(
        '#markup' => t('This is a test form just to understand Drupal Form API'),
        '#prefix' => '<p>',
        '#suffix' => '</p>',
    );
    
    $form['name']=array(
        '#type'=> 'textfield',
        '#title'=> t('Enter your name'),
        '#description'=> t('Your first name goes here'),
        '#autocomplete_path' => 'example/drupalform-autocomplete', 
      );
    $form['last_name']=array(
        '#type'=> 'textfield',
        '#title'=> t('Enter your Last name'),
        '#description'=> t('Your Last name goes here')
      );

     $form['email']= array(
        '#type'=> 'textfield',
        '#title'=> t('Enter your email'),
        '#description'=> t('Your email goes here')
      );

    $form['country']=array(
        '#type'=> 'select',
        '#title'=> t('Select your country'),
        '#options'=> array('','USA','UK','France','Japan')
      );

    $form['submit']=array(
        '#type'=> 'submit',
        '#value'=> t('Submit')
      );

      return $form;
}

function drupalform_form1_validate($form, $form_state) {

  if(empty($form_state['values']['name']))
     form_set_error('name','Name cannot be empty');
  if(empty($form_state['values']['last_name']))
     form_set_error('last_name','Last name cannot be empty');
  if(filter_var($form_state['values']['email'], FILTER_VALIDATE_EMAIL) == false)
    form_set_error('email','Email is not valid');
}

function drupalform_form1_submit($form, $form_state) {
   //Depending on the type of form you can add the logic
   //to store the details of the form 
   //by adding it in a Drupal table.
   //or sending a mail to the admin
   //Storing in a file
   //or pass it to some other service
    
   /*foreach ($form_state['values']['submitted_tree'] as $form_state_key => $form_state_value) {

        $form_state['storage'][$form_state_key] = $form_state_value;
    }*/
   drupal_set_message('<b>First Name</b> '.$form_state['values']['name']."<br /> <b>Last Name</b> ".$form_state['values']['last_name']." Form has been submitted");
   
}

function drupalform_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'user_register_form') {
    // 1. Put the captcha element inside the fieldset 
    //echo $form_id;
    // OR

    // 2. Associate the capthca element to the form 
    $form['captcha'] = array(
        '#type' => 'captcha',
        '#captcha_type' => 'image_captcha/Image',
    );

    // OR

    // 3. Adjust the #weight attribute in the form 
  }
}

function drupalform_autocomplete($text = '') {
  $results = array();
  $query = db_select('users', 'u');
  $query
      ->condition('u.name', '%' . db_like($text) . '%', 'LIKE')
      ->fields('u', array('name'))
      ->orderBy('name', 'ASC');
  $names = $query->execute();

  foreach ($names as $row) {
    $results[$row->name] = check_plain($row->name);
  }

  drupal_json_output($results);
 
 
  
    
}

// http://www.webomelette.com/how-to-create-autocomplete-widget-drupal-7#sthash.ni00jUZk.dpuf